<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="WXUserGroupMapper" >
  <resultMap id="BaseResultMap" type="java.util.Map" >
  	<id column="GROUP_ID" property="groupId" jdbcType="VARCHAR"/>
  	<result column="CREATE_USER" property="createUser" jdbcType="VARCHAR"/>
	<result column="NAME" property="name" jdbcType="VARCHAR"/>
	<result column="DELETE_FLAG" property="deleteFlag" jdbcType="INTEGER"/>
	<result column="CREATE_TIME" property="createTime" jdbcType="DATE"/>
	
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="createUser != null" >
		 AND CREATE_USER = #{createUser}
	 </if>
	<if test="name != null" >
		 AND NAME = #{name}
	 </if>
	<if test="groupId != null" >
		 AND GROUP_ID = #{groupId}
	 </if>
	<if test="deleteFlag != null" >
		 AND DELETE_FLAG = #{deleteFlag}
	 </if>
	<if test="createTime != null and createTime !=''" >
		 AND CREATE_TIME = to_date('${createTime}','yyyy-mm-dd hh24:mi:ss')
	 </if>
	     
    </trim>
  </sql>
  
  <sql id="Base_Column_List" >
  	CREATE_USER,NAME,GROUP_ID,DELETE_FLAG,CREATE_TIME
  </sql>
  
  <!-- 分页查询微信用户组 -->
  
  <select id="getList" resultMap="BaseResultMap" >
  	<include refid="common.Oracle_Pagination_Head" />
	    select 
	    <include refid="Base_Column_List" />
	    from T_WX_USER_GROUP
	<if test="_parameter != null" >
     	<include refid="Example_Where_Clause" />
   	</if>
    <if test="orderByClause != null" >
     	order by ${orderByClause}
    </if>
    <include refid="common.Oracle_Pagination_Tail" />
  </select>
  
  <!-- 根据Id查询微信用户组 -->
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_WX_USER_GROUP
    where GROUP_ID = #{groupId,jdbcType=VARCHAR}
  </select>
  
  <!-- 查询微信用户组总数量 -->
  
  <select id="countAll" resultType="java.lang.Integer" >
	    select count(1)
	    from T_WX_USER_GROUP
	    <!-- 有DELETE_FLAG放开-->
	   <!-- where DELETE_FLAG = 0 -->
  </select>
  
  <!-- 查询所有微信用户组 -->
  
  <select id="getAll" resultMap="BaseResultMap">
    select 
     <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_WX_USER_GROUP 
   <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <!-- 根据微信用户组编码,查询微信用户组信息 有code验证时放开-->
   <!-- <select id="getByCode" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from T_WX_USER_GROUP
    where  = #{,jdbcType=}
    AND DELETE_FLAG = 0 
    <if test="groupId != null" >
    	and GROUP_ID != #{groupId,jdbcType=VARCHAR}
    </if>
  </select> -->
  
  <!-- 增加微信用户组 -->
  
  <insert id="insert" parameterType="java.util.Map" >
    insert into T_WX_USER_GROUP
    <trim prefix="(" suffix=")" suffixOverrides="," >
       <if test="groupId != null"> GROUP_ID, </if>
      <if test="createUser != null"> CREATE_USER, </if>
	<if test="name != null"> NAME, </if>
	<if test="deleteFlag != null"> DELETE_FLAG, </if>
	<if test="createTime != null and createTime !=''"> CREATE_TIME, </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{groupId},
     <if test="createUser != null"> #{createUser}, </if>
	<if test="name != null"> #{name}, </if>
	<if test="deleteFlag != null"> #{deleteFlag}, </if>
	<if test="createTime != null and createTime !=''"> #{createTime}, </if>
    </trim>
  </insert>
  
  <!-- 更新微信用户组 -->
    
  <update id="update" parameterType="java.util.Map" >
    update T_WX_USER_GROUP
     <set >
      <if test="createUser != null">CREATE_USER = #{createUser}, </if>
	<if test="name != null">NAME = #{name}, </if>
	<if test="deleteFlag != null">DELETE_FLAG = #{deleteFlag}, </if>
	<if test="createTime != null and createTime !=''">CREATE_TIME = #{createTime}, </if>
    </set>
    where GROUP_ID = #{groupId,jdbcType=VARCHAR}
  </update>
  <delete id="delete" parameterType="java.lang.String" >
    delete from T_WX_USER_GROUP
    where GROUP_ID = #{groupId,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteAll" parameterType="java.lang.String" >
    delete from T_WX_USER_GROUP
    where 1=1
  </delete>
  <!-- 逻辑删除微信用户组 -->
  
  <update id="logicDelete" parameterType="java.util.Map" >
    update T_WX_USER_GROUP
    set DELETE_FLAG = -1
    where GROUP_ID = #{groupId,jdbcType=VARCHAR}
  </update>
</mapper>